name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.21.x', '1.22.x', '1.23.x', '1.24.x', '1.25.x' ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: Install cover tool
        run: go install golang.org/x/tools/cmd/cover@latest

      - name: Ensure cover tool available
        run: go install golang.org/x/tools/cmd/cover@latest

      - name: Download deps
        run: go mod download

      - name: fmt-check
        run: |
          set -e
          OUT=$(gofmt -l .)
          if [ -n "$OUT" ]; then
            echo "Files not formatted:"
            echo "$OUT"
            exit 1
          fi

      - name: vet
        run: go vet ./...

      - name: build (compile all packages)
        run: go build ./...

      - name: test with coverage
        run: make test.ci

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-go${{ matrix.go }}
          path: ./.tmp/coverage.out

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./.tmp/coverage.out
          flags: ${{ matrix.os }}-go${{ matrix.go }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }} 
